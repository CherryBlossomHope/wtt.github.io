import{_ as a,p as s,q as n,a1 as t}from"./framework-204010b2.js";const p={},e=t(`<h3 id="顶层-await" tabindex="-1"><a class="header-anchor" href="#顶层-await" aria-hidden="true">#</a> 顶层 await</h3><p>结果代码会被编译成 async setup()</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span>
  <span class="token keyword">const</span> post <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/api/post/1</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> r<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，await 的表达式会自动编译成在 await 之后保留当前组件实例上下文的格式。</p><p>顶层 await 必须与 Suspense 内置组件组合使用 目前还是处于实验阶段特性</p>`,5),o=[e];function c(i,l){return s(),n("div",null,o)}const u=a(p,[["render",c],["__file","Vue3.html.vue"]]);export{u as default};
